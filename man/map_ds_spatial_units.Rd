% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_mappings.R
\name{map_ds_spatial_units}
\alias{map_ds_spatial_units}
\title{Map spatial level of country and cantons}
\usage{
map_ds_spatial_units(
  df_spatial,
  pattern_function = statab_canton_country_pattern,
  match_function = stattab_country_canton_find_match
)
}
\arguments{
\item{df_spatial}{tibble that has just one colunm with all the distinct
spatial values of the dataset}

\item{pattern_function}{function to make a pattern for detecting
the spatial unit, default statab_canton_country_pattern
as an example}

\item{match_function}{function to detect the pattern in the spatial units
of the dataset, default stattab_country_canton_find_match
as an example}
}
\value{
df_spatial tibble that contains a mapping of the spatial units
to spatialunit_uid and the name of the spatial unit
}
\description{
This function expects a tibble with the distinct spatial values of the
dataset in this column.
}
\details{
The idea is to find matches for these spatial values in a reduced dataframe
this dataframe is then returned with spatial matches and can be joined
with the dataset in order to transfer the match making to the dataset

In order to keep that function general: the pattern_function and the
match_function can be provided. For now the defaults are set to
statab_canton_country_pattern for the pattern_function and
stattab_country_canton_find_match for the match_function. But you can
provide your own such functions, in case these do not work for your case.

So far the function only maps on the level of country and cantons. It should
be not to hard to adjust this function to other spatial levels
}
\examples{
map_ds_spatial_units(df_spatial)
\dontrun{
  # df_spatial should be a tibble with just one column that contains
  # spatial values that are all distinct
  df_spatial <- map_ds_spatial_units(df_spatial)
}
}
